import Head from 'next/head'
import Image from 'next/image'
import gsap from 'gsap'
import ScrollTrigger from 'gsap/dist/ScrollTrigger'
import { useRef, useLayoutEffect } from 'react'

export default function Home() {
  const vidRef = useRef<HTMLDivElement>(null)
  const textRef = useRef<HTMLDivElement>(null)
  const blockRef = useRef<HTMLDivElement>(null)
  const multiRef = useRef<HTMLDivElement>(null)
  const comp = useRef() // create a ref for the root level element (for scoping)

  useLayoutEffect(() => {
    gsap.registerPlugin(ScrollTrigger)

    let ctx = gsap.context(() => {
      gsap
        .timeline({
          scrollTrigger: {
            trigger: vidRef.current,
            start: 'top top',
            end: 'bottom+=25% top',
            markers: true,
            scrub: 3,
            pin: true
          }
        })
        .fromTo(
          (vidRef.current as HTMLDivElement).children[1],
          {
            filter: 'grayscale(0.5) brightness(0.5) hue-rotate(180deg)'
          },
          {
            filter: 'grayscale(0) brightness(1) hue-rotate(0deg)'
          },
          0
        )
        .to(textRef.current, { background: '#222222aa' }, 0.5)
        .from(textRef.current, { y: '250', autoAlpha: 0 }, 0.5)
        .to(vidRef.current, { y: -25 }, 0.9)
        .to(blockRef.current, { y: -25 }, 0.9)
      // .fromTo(
      //   blockRef.current,
      //   {
      //     marginLeft: '20rem',
      //     marginRight: '20rem',
      //     // yPercent: 0,
      //     autoAlpha: 0
      //   },
      //   {
      //     marginLeft: '0rem',
      //     marginRight: '0rem',
      //     // yPercent: -5,
      //     autoAlpha: 1
      //   },
      //   1
      // )

      gsap
        .timeline({
          scrollTrigger: {
            trigger: (blockRef.current as HTMLDivElement).children[0],
            start: 'top top',
            end: 'bottom+=1000 top',
            pin: true,
            scrub: true,
            markers: true
          }
        })
        .to(
          (blockRef.current as HTMLDivElement).children[0],
          { ['--text-color']: 'purple' },
          0
        )

      gsap
        .timeline({
          scrollTrigger: {
            trigger: multiRef.current,
            scrub: 2,
            start: 'top center',
            end: 'bottom center'
          }
        })
        .to(
          (multiRef.current as HTMLDivElement).children[0],
          {
            y: -30
          },
          0
        )
        .to(
          (multiRef.current as HTMLDivElement).children[1],
          {
            y: 100
          },
          0
        )
    }, comp)
    return () => ctx.revert()
  }, [])

  return (
    <>
      <Head>
        <title>What am i doing?</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="bg-indigo-10">
        <div className="img-wrapper ratio-16x9 position-relative" ref={vidRef}>
          <div
            className="position-absolute z-10 bottom-75 mt-xxxl left-50 absolute-center"
            style={{ fontSize: '20rem' }}
          >
            &#x2965;
          </div>
          <video
            style={{ filter: 'hue-rotate(305deg)', objectFit: 'cover' }}
            className="object-position-br d-block"
            width="100%"
            height="100%"
            muted
            autoPlay
            loop
          >
            <source src={'/assets/videos/vid.mp4'} />
          </video>
          <div className="position-absolute top-50 left-50 absolute-center w-100 h-100 flex-center">
            <div
              className="p-md border border-rounded border-2 d-inline-block"
              ref={textRef}
            >
              <p className="h1 mb-none">Name Here</p>
            </div>
          </div>
        </div>
        <div
          className="bg-black-10 position-relative z-900 color-indigo-80 border-tl-pill border-tr-pill"
          ref={blockRef}
          style={{ minHeight: 5000 }}
        >
          <div className="container py-xxl mnt-xl px-xl">
            <div className="row text-center  border-left border-right">
              <div className="col-6">
                <p className="h1">Node JS</p>
              </div>
              <div className="col-6">
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  viewBox="0 0 48 48"
                  width="144px"
                  height="144px"
                  baseProfile="basic"
                >
                  <path
                    fill="#21a366"
                    d="M24.007,45.419c-0.574,0-1.143-0.15-1.646-0.44l-5.24-3.103c-0.783-0.438-0.401-0.593-0.143-0.682	c1.044-0.365,1.255-0.448,2.369-1.081c0.117-0.067,0.27-0.043,0.39,0.028l4.026,2.389c0.145,0.079,0.352,0.079,0.486,0l15.697-9.061	c0.145-0.083,0.24-0.251,0.24-0.424V14.932c0-0.181-0.094-0.342-0.243-0.432L24.253,5.446c-0.145-0.086-0.338-0.086-0.483,0	L8.082,14.499c-0.152,0.086-0.249,0.255-0.249,0.428v18.114c0,0.173,0.094,0.338,0.244,0.42l4.299,2.483	c2.334,1.167,3.76-0.208,3.76-1.591V16.476c0-0.255,0.2-0.452,0.456-0.452h1.988c0.248,0,0.452,0.196,0.452,0.452v17.886	c0,3.112-1.697,4.9-4.648,4.9c-0.908,0-1.623,0-3.619-0.982l-4.118-2.373C5.629,35.317,5,34.216,5,33.042V14.928	c0-1.179,0.629-2.279,1.646-2.861L22.36,3.002c0.994-0.562,2.314-0.562,3.301,0l15.694,9.069C42.367,12.656,43,13.753,43,14.932	v18.114c0,1.175-0.633,2.271-1.646,2.861L25.66,44.971c-0.503,0.291-1.073,0.44-1.654,0.44"
                  />
                  <path
                    fill="#21a366"
                    d="M28.856,32.937c-6.868,0-8.308-3.153-8.308-5.797c0-0.251,0.203-0.452,0.455-0.452h2.028	c0.224,0,0.413,0.163,0.448,0.384c0.306,2.066,1.218,3.108,5.371,3.108c3.308,0,4.715-0.747,4.715-2.502	c0-1.01-0.401-1.76-5.54-2.263c-4.299-0.424-6.955-1.371-6.955-4.809c0-3.167,2.672-5.053,7.147-5.053	c5.026,0,7.517,1.745,7.831,5.493c0.012,0.13-0.035,0.255-0.122,0.35c-0.086,0.09-0.208,0.145-0.334,0.145h-2.039	c-0.212,0-0.397-0.149-0.44-0.354c-0.491-2.173-1.678-2.868-4.904-2.868c-3.611,0-4.031,1.257-4.031,2.2	c0,1.143,0.495,1.477,5.367,2.122c4.825,0.64,7.116,1.544,7.116,4.935c0,3.418-2.853,5.379-7.827,5.379"
                  />
                </svg>
              </div>
            </div>
            <div
              className="position-relative"
              style={{ height: 1000 }}
              ref={multiRef}
            >
              <div className="position-absolute top-0 w-100 h-100 ratio-4x3 z-1">
                <Image
                  src={'/assets/images/terminal.png'}
                  style={{ objectFit: 'contain' }}
                  alt=""
                  fill
                />
              </div>
              <div className="position-absolute top-0 w-100 h-100 ratio-16x9 z-2 mt-xxl ml-xxxl">
                <Image
                  src={'/assets/images/webpack.png'}
                  style={{ objectFit: 'contain' }}
                  alt=""
                  fill
                />
              </div>
              {/* <div className="position-absolute top-0 w-100 h-100 ratio-4x3 z-3 mt-xxxl ml-xxxl">
                <Image
                  src={'/assets/images/express.png'}
                  style={{ objectFit: 'contain' }}
                  alt=""
                  fill
                />
              </div> */}
            </div>
          </div>
          <ul>
            <li>Thing goes here</li>
            <li>Thing goes here</li>
            <li>Thing goes here</li>
            <li>Thing goes here</li>
            <li>Thing goes here</li>
          </ul>
        </div>
      </main>
    </>
  )
}
